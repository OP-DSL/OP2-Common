//
// auto-generated by op2.py
//

void updateP_omp4_kernel(
  double *data0,
  int dat0size,
  double *data1,
  int dat1size,
  double *arg2,
  int count,
  int num_teams,
  int nthread){

  double arg2_l = *arg2;
#pragma omp target teams distribute parallel for schedule(static, 1)           \
    num_teams(num_teams) thread_limit(nthread)                                 \
        map(to                                                                 \
            : data0 [0:dat0size], data1 [0:dat1size])
  for ( int n_op=0; n_op<count; n_op++ ){
    //variable mapping
    const double *r = &data0[1*n_op];
    double *p = &data1[1*n_op];
    const double *beta = &arg2_l;

    //inline function
    
    *p = (*beta) * (*p) + (*r);
    //end inline func
  }

  *arg2 = arg2_l;
}

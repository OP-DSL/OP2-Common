project(OP2-Jac2)

# Require CMake 2.8
cmake_minimum_required(VERSION 2.8)

include(../common.cmake)

# simple sequential version
if (TARGET op2_seq)
  add_executable(jac2_seq jac.cpp res.h update.h)
  target_link_libraries(jac2_seq op2_seq)
  install(TARGETS jac2_seq RUNTIME DESTINATION ${OP2_APPS_DIR} COMPONENT RuntimeExecutables)
endif()

# x86 version using kernel files generated by op2.m
if (TARGET op2_openmp)
  add_executable(jac2_openmp jac_op.cpp jac_kernels.cpp res.h update.h)
  target_link_libraries(jac2_openmp op2_openmp)
  set_target_properties(jac2_openmp PROPERTIES COMPILE_FLAGS
    "${OpenMP_CXX_FLAGS}" LINK_FLAGS "${OpenMP_CXX_FLAGS}")
  install(TARGETS jac2_openmp RUNTIME DESTINATION ${OP2_APPS_DIR} COMPONENT RuntimeExecutables)
endif()

# CUDA version using kernel files generated by op2.m
if (TARGET op2_cuda)
  find_package(CUDA)
  if (CUDA_FOUND)
    cuda_add_executable(jac2_cuda jac_op.cpp jac_kernels.cu res.h update.h)
    target_link_libraries(jac2_cuda op2_cuda)
    install(TARGETS jac2_cuda RUNTIME DESTINATION ${OP2_APPS_DIR} COMPONENT RuntimeExecutables)
  endif()
endif()

# MPI with sequential-nodes version
if (TARGET op2_mpi)
  add_definitions(${OP2_MPI_DEFINITIONS})
  include_directories(${OP2_MPI_INCLUDE_DIRS})
  add_executable(jac2_mpi jac_mpi.cpp res.h update.h)
  target_link_libraries(jac2_mpi op2_mpi)
  install(TARGETS jac2_mpi RUNTIME DESTINATION ${OP2_APPS_DIR} COMPONENT RuntimeExecutables)
endif()

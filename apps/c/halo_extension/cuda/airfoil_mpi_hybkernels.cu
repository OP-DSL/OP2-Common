//
// auto-generated by op2.py
//

//header
#ifdef GPUPASS
#define op_par_loop_res_calc1 op_par_loop_res_calc1_gpu
#define op_par_loop_res_calc2 op_par_loop_res_calc2_gpu
#include "airfoil_mpi_kernels.cu"
#undef op_par_loop_res_calc1
#undef op_par_loop_res_calc2
#else
#define op_par_loop_res_calc1 op_par_loop_res_calc1_cpu
#define op_par_loop_res_calc2 op_par_loop_res_calc2_cpu
#include "../openmp/airfoil_mpi_kernels.cpp"
#undef op_par_loop_res_calc1
#undef op_par_loop_res_calc2

//user kernel files

void op_par_loop_res_calc1_gpu(char const *name, op_set set,
  op_arg arg0,
  op_arg arg1,
  op_arg arg2,
  op_arg arg3);

//GPU host stub function
#if OP_HYBRID_GPU
void op_par_loop_res_calc1(char const *name, op_set set,
  op_arg arg0,
  op_arg arg1,
  op_arg arg2,
  op_arg arg3){

  if (OP_hybrid_gpu) {
    op_par_loop_res_calc1_gpu(name, set,
      arg0,
      arg1,
      arg2,
      arg3);

    }else{
    op_par_loop_res_calc1_cpu(name, set,
      arg0,
      arg1,
      arg2,
      arg3);

  }
}
#else
void op_par_loop_res_calc1(char const *name, op_set set,
  op_arg arg0,
  op_arg arg1,
  op_arg arg2,
  op_arg arg3){

  op_par_loop_res_calc1_gpu(name, set,
    arg0,
    arg1,
    arg2,
    arg3);

  }
#endif //OP_HYBRID_GPU

void op_par_loop_res_calc2_gpu(char const *name, op_set set,
  op_arg arg0,
  op_arg arg1,
  op_arg arg2,
  op_arg arg3);

//GPU host stub function
#if OP_HYBRID_GPU
void op_par_loop_res_calc2(char const *name, op_set set,
  op_arg arg0,
  op_arg arg1,
  op_arg arg2,
  op_arg arg3){

  if (OP_hybrid_gpu) {
    op_par_loop_res_calc2_gpu(name, set,
      arg0,
      arg1,
      arg2,
      arg3);

    }else{
    op_par_loop_res_calc2_cpu(name, set,
      arg0,
      arg1,
      arg2,
      arg3);

  }
}
#else
void op_par_loop_res_calc2(char const *name, op_set set,
  op_arg arg0,
  op_arg arg1,
  op_arg arg2,
  op_arg arg3){

  op_par_loop_res_calc2_gpu(name, set,
    arg0,
    arg1,
    arg2,
    arg3);

  }
#endif //OP_HYBRID_GPU
#endif

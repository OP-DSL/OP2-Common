project(OP2-Airfoil)

# Require CMake 2.8
cmake_minimum_required(VERSION 2.8)

include(../common.cmake)

foreach(VARIANT ${OP2_BUILD_VARIANTS})

  set(KERNEL_HEADERS ${VARIANT}/save_soln.h ${VARIANT}/adt_calc.h ${VARIANT}/res_calc.h ${VARIANT}/bres_calc.h)

  # simple sequential version
  if (TARGET op2_seq)
    add_executable(airfoil_${VARIANT}_seq ${VARIANT}/airfoil.cpp ${KERNEL_HEADERS})
    target_link_libraries(airfoil_${VARIANT}_seq op2_seq)
    install(TARGETS airfoil_${VARIANT}_seq RUNTIME DESTINATION ${OP2_APPS_DIR} COMPONENT RuntimeExecutables)
  endif()

  # x86 version using kernel files generated by op2.m
  if (TARGET op2_openmp)
    add_executable(airfoil_${VARIANT}_openmp ${VARIANT}/airfoil_op.cpp ${VARIANT}/airfoil_kernels.cpp
      ${KERNEL_HEADERS})
    target_link_libraries(airfoil_${VARIANT}_openmp op2_openmp)
    set_target_properties(airfoil_${VARIANT}_openmp PROPERTIES COMPILE_FLAGS
      "${OpenMP_CXX_FLAGS}" LINK_FLAGS "${OpenMP_CXX_FLAGS}")
    install(TARGETS airfoil_${VARIANT}_openmp RUNTIME DESTINATION ${OP2_APPS_DIR} COMPONENT RuntimeExecutables)
  endif()

  # CUDA version using kernel files generated by op2.m
  if (TARGET op2_cuda)
    find_package(CUDA)
    if (CUDA_FOUND)
      cuda_add_executable(airfoil_${VARIANT}_cuda ${VARIANT}/airfoil_op.cpp ${VARIANT}/airfoil_kernels.cu
        ${KERNEL_HEADERS})
      target_link_libraries(airfoil_${VARIANT}_cuda op2_cuda)
      install(TARGETS airfoil_${VARIANT}_cuda RUNTIME DESTINATION ${OP2_APPS_DIR} COMPONENT RuntimeExecutables)
    endif()
  endif()

  # MPI with sequential-nodes version
  if (TARGET op2_mpi)
    add_definitions(${OP2_MPI_DEFINITIONS})
    include_directories(${OP2_MPI_INCLUDE_DIRS})
    add_executable(airfoil_${VARIANT}_mpi ${VARIANT}/airfoil_mpi.cpp
      ${KERNEL_HEADERS})
    target_link_libraries(airfoil_${VARIANT}_mpi op2_mpi)
    install(TARGETS airfoil_${VARIANT}_mpi RUNTIME DESTINATION ${OP2_APPS_DIR} COMPONENT RuntimeExecutables)
  endif()

endforeach()

#
# set paths for header files and libraries
#

C_OP2		= $(OP2)/c

INC_OP2 = $(C_OP2)/include
SRC_OP2 = $(C_OP2)/src
LIB_OP2 = $(C_OP2)/lib

#CUDA stuff
CUDA := $(CUDA_INSTALL_PATH)
INC_CUDA := -I$(CUDA)/include -I$(C_OP2) -I.
LIB_CUDA := -L$(CUDA)/lib64


# compiler
CC = gcc
CPP = g++

#
# set flags for compilation and linking
#

# -Xptxas -dlcm=ca   => use L1 cache
# -Xptxas -dlcm=cg   => no L1 cache

#CCFLAGS	:= -g -fPIC -DUNIX -Wall -Wextra
#NVCCFLAGS	:= -g -G -arch=sm_20 -Xptxas=-v -use_fast_math

#CCFLAGS		:= -g
CCFLAGS		:= -O3 -DUNIX -Wall -Wextra
#NVCCFLAGS	:= -O3 -maxrregcount 48 -arch=sm_20 \
#		   -Xptxas -dlcm=cg -Xptxas=-v -use_fast_math
NVCCFLAGS	:= -O3 -arch=sm_20 \
		   -Xptxas -dlcm=ca -Xptxas=-v -use_fast_math
#NVCCFLAGS	:= -g
LIBS		:= $(LIB) -lcudart
OMP		:= -fopenmp -lgomp
C_OP2_H		:= $(C_OP2)/op_seq.h $(C_OP2)/op_lib.h $(C_OP2)/op_lib_core.h
OP2_LIB		:= $(C_OP2)/op_lib.a

EXEC_SEQ = airfoil_seq
EXEC_OPENMP = airfoil_openmp
EXEC_CUDA = airfoil_cuda


#
# master to make all versions
#

all: airfoil_seq airfoil_openmp airfoil_cuda

#
# simple sequential version
#

airfoil_seq: airfoil.cpp save_soln.h adt_calc.h res_calc.h bres_calc.h $(LIB_OP2)/libop2_reference.a $(INC_OP2)/op_lib_c.h $(INC_OP2)/op_lib_cpp.h
		$(CPP) airfoil.cpp -I$(INC_OP2) -L$(LIB_OP2) -lop2_reference -o $(EXEC_SEQ)

#
# x86 version using kernel files generated by op2.m
#

airfoil_openmp:	airfoil_op.cpp airfoil_kernels.cpp \
		save_soln_kernel.cpp  save_soln.h \
		adt_calc_kernel.cpp   adt_calc.h  \
		res_calc_kernel.cpp   res_calc.h  \
		bres_calc_kernel.cpp  bres_calc.h \
		update_kernel.cpp     update.h    \
                Makefile $(LIB_OP2)/libop2_rt_support.a $(LIB_OP2)/libop2_openmp.a \
		$(INC_OP2)/op_lib_cpp.h $(INC_OP2)/op_rt_support.h
		g++ -O3 $(OMP) -I$(INC_OP2) -L$(LIB_OP2) -o $(EXEC_OPENMP) airfoil_op.cpp \
			airfoil_kernels.cpp -lop2_openmp -lop2_rt_support

#
# CUDA version using kernel files generated by op2.m
#

airfoil_cuda:	airfoil_op.cpp airfoil_kernels_cu.o Makefile $(LIB_OP2)/libop2_reference.a $(LIB_OP2)/libop2_rt_support.a
		g++ -O3 -fPIC $(INC_CUDA) -I$(INC_OP2) -L$(LIB_OP2) $(LIB_CUDA) airfoil_op.cpp airfoil_kernels_cu.o -lcudart -lop2_rt_support -lop2_cuda -o $(EXEC_CUDA)

airfoil_kernels_cu.o:	airfoil_kernels.cu      \
		save_soln_kernel.cu save_soln.h \
		adt_calc_kernel.cu  adt_calc.h  \
		res_calc_kernel.cu  res_calc.h  \
		bres_calc_kernel.cu bres_calc.h \
		update_kernel.cu    update.h    \
                Makefile
		nvcc $(INC) $(NVCCFLAGS)  -I$(INC_OP2) \
		-c -o airfoil_kernels_cu.o \
		airfoil_kernels.cu

#
# cleanup
#

clean:
		rm -f $(EXEC_SEQ) $(EXEC_OPENMP) $(EXEC_CUDA) *.o

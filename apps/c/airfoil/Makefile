#
# set paths for header files and libraries
#

OP2		= $(OP2_INST_DIR)
INC_OP2 = $(OP2)/include
#src should be replaced by LIB, when we get libraries
SRC_OP2 = $(OP2)/src
LIB_OP2 = $(OP2)/lib

#CUDA stuff
CUDA := $(CUDA_INSTALL_PATH)
INC_CUDA := -I$(CUDA)/include -I$(OP2) -I.
LIB_CUDA := -L$(CUDA)/lib64


# compiler
CC = gcc
CPP = g++

#
# set flags for compilation and linking
#

# -Xptxas -dlcm=ca   => use L1 cache
# -Xptxas -dlcm=cg   => no L1 cache

#CCFLAGS	:= -g -fPIC -DUNIX -Wall -Wextra
#NVCCFLAGS	:= -g -G -arch=sm_20 -Xptxas=-v -use_fast_math

CCFLAGS		:= -O3 -fPIC -DUNIX -Wall -Wextra
#NVCCFLAGS	:= -O3 -maxrregcount 48 -arch=sm_20 \
#		   -Xptxas -dlcm=cg -Xptxas=-v -use_fast_math
NVCCFLAGS	:= -O3 -arch=sm_20 \
		   -Xptxas -dlcm=ca -Xptxas=-v -use_fast_math
LIBS		:= $(LIB) -lcudart
OMP		:= -fopenmp -lgomp
OP2_H		:= $(OP2)/op_seq.h $(OP2)/op_lib.h $(OP2)/op_lib_core.h
OP2_LIB		:= $(OP2)/op_lib.a


#
# master to make all versions
#

all: airfoil_seq airfoil_op airfoil_cuda

#
# simple sequential version
#

airfoil_seq: airfoil.cpp save_soln.h adt_calc.h res_calc.h bres_calc.h
		$(CPP) -I$(INC_OP2) -L$(LIB_OP2) -lop2_core -lop2_reference -o airfoil_seq airfoil.cpp

#
# x86 version using kernel files generated by op2.m
#

airfoil_op:	airfoil_op.cpp airfoil_kernels.cpp \
		save_soln_kernel.cpp  save_soln.h \
		adt_calc_kernel.cpp   adt_calc.h  \
		res_calc_kernel.cpp   res_calc.h  \
		bres_calc_kernel.cpp  bres_calc.h \
		update_kernel.cpp     update.h    \
                Makefile $(OP2_H) $(OP2_LIB)
		g++ $(INC) $(OMP) -o airfoil_op airfoil_op.cpp \
		                     airfoil_kernels.cpp $(OP2_LIB)

#
# CUDA version using kernel files generated by op2.m
#

airfoil_cuda:	airfoil_op.cpp airfoil_kernels_cu.o Makefile $(OP2_LIB)
		g++ $(INC) -fPIC -o airfoil_cuda airfoil_op.cpp \
		                    airfoil_kernels_cu.o $(OP2_LIB) $(LIBS)

airfoil_kernels_cu.o:	airfoil_kernels.cu      \
		save_soln_kernel.cu save_soln.h \
		adt_calc_kernel.cu  adt_calc.h  \
		res_calc_kernel.cu  res_calc.h  \
		bres_calc_kernel.cu bres_calc.h \
		update_kernel.cu    update.h    \
                Makefile $(OP2_H)
		nvcc $(INC) $(NVCCFLAGS) -c -o airfoil_kernels_cu.o \
				               airfoil_kernels.cu
#
# cleanup
#

clean:
		rm -f airfoil_seq airfoil_op airfoil_cuda *.o

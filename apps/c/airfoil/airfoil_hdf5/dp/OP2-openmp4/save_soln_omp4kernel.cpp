//
// auto-generated by op2.py
//

#pragma omp declare target
inline void save_soln( const double *q, double *qold) {
  for (int n = 0; n < 4; n++)
    qold[n] = q[n];
}
#pragma omp end declare target

void save_soln_omp4_kernel(
  double *data0,
  double *data1,
  int count){
  #pragma omp target teams map(to:data0,data1)
  #pragma omp distribute parallel for schedule(static,1)
  for ( int n_op=0; n_op<count; n_op++ ){
    /*
    save_soln(
      &data0[4*n_op],
      &data1[4*n_op]);
    */
    //variable mapping
    /*
    const double *q = &data0[4*n_op];
    double *qold = &data1[4*n_op];
    */
    //inline function
      
    for (int n = 0; n < 4; n++)
      data1[4*n_op + n] = data0[4*n_op + n];
    //end inline func
  }
}
